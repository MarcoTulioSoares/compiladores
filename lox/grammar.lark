?start     : program

program    : declaration*

?declaration : var_decl
             | stmt

var_decl   : "var" VAR ("=" expr)? ";"

?stmt      : expr ";"
           | print_cmd
           | block
           | if_cmd
           // | for_cmd
           // | ...

print_cmd  : "print" expr ";"

block      : "{" stmt* "}"

if_cmd     : "if" "(" expr ")" stmt ["else" stmt]

// EXPRESSÃ•ES
?expr      : assign

?assign    : VAR "=" assign   -> assign
           | unary

?unary     : (NOT | MINUS) unary   -> unary
           | atom

?atom      : NUMBER 
           | BOOL
           | VAR
           | STRING
           | NIL
           | "(" expr ")"
           | call

call       : VAR "(" params ")"
params     : [ expr ("," expr )* ]

// Tokens
BOOL.2     : "true" | "false"
VAR.1      : /[a-z_]\w*/
NUMBER     : /([1-9][0-9]*|0)(\.[0-9]+)?/ 
STRING     : /"[^"]*"/
NIL.2      : "nil"
NOT        : "!"
MINUS      : "-"
COMMENT    : "//" /[^\n]*/

%ignore /\s/ | COMMENT